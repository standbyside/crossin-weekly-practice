#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
【题目背景】：

    数字水印（Digital Watermarking）技术是将一些标识信息（即数字水印）直接嵌入数字载体当中（包括多媒体、文档、软件等）
    或是间接表示（修改特定区域的结构），且不影响原载体的使用价值，也不容易被探知和再次修改。但可以被生产方识别和辨认。

    只要在你看的页面上嵌入了肉眼不可见的信息，记录你的身份，之后再通过相应的解码软件从流出的截屏上提取出这些信息，就能知道你是谁了。
    数字水印的应用还包括防伪、防篡改、保护版权等场景。
    数字水印是个很大的范畴，有很多实现方式，具有不同的实现难度、信息容量、抗攻击性、对原图的干扰等。

    这里介绍一种很简单的实现方式：
        图像中的每个像素通常可以用 RGB（红绿蓝）三个 0~255 的值来表示。如果把这个值转成二进制来表示，就是 00000000~11111111。
        把每个值的最后1位全部设成0，对图像的影响非常细微，人眼无法察觉。
        这样，空出来的最后1位就可以拿来存储信息。把水印字符转成二进制，依次填入这些位置上，就完成了信息的嵌入。
        提取信息就是上述的逆过程：把图像的像素信息取出来，提取最后1位，拼出信息。

【基础题】：将一段文字嵌入到一张图片中，然后再成功地复原出来
【提示】：
    PIL 库可以方便得到图像的像素值，以及保存新图像。
    将一个字符 c 转成二进制表示：bin(ord(c))[2:]，反之：chr(int(s, 2))
    将一个整数 x 的二进制末位设为 0：x // 2 * 2
    处理后的图像需要保存成 png 或 bmp，因为 jpg 是有损压缩，无法保证像素值不变。
"""